name: WASM

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Cache Cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build WASM (web target)
        working-directory: bindings/wasm
        run: wasm-pack build --target web --out-dir pkg --release

      - name: Run WASM tests (Node)
        working-directory: bindings/wasm
        run: wasm-pack test --node

      - name: Upload WASM pkg
        uses: actions/upload-artifact@v3
        with:
          name: wasm-pkg
          path: bindings/wasm/pkg

  npm-pack:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - name: Build package
        working-directory: bindings/wasm
        run: |
          npm ci || true
          wasm-pack build --target web --out-dir pkg --release
          npm pack
      - name: Upload npm tarball
        uses: actions/upload-artifact@v3
        with:
          name: npm-tarball
          path: bindings/wasm/*.tgz

